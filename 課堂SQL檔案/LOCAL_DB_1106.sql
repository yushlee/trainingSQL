-- Alias (別名) 
-- 欄位別名
-- AS "雙引號"
-- 1.AS 可省略不寫
-- 2."雙引號"可省略不寫(別名中間不能有空白)
SELECT STORE_NAME "商業名稱", SUM(SALES) 營業額, COUNT(STORE_ID) "數量",
	GROUP_CONCAT(SALES ORDER BY SALES SEPARATOR '/') AS "GROUP SALES LIST"
FROM STORE_INFORMATION
GROUP BY STORE_NAME;

-- 表格別名
SELECT S.STORE_ID, S.STORE_NAME
FROM STORE_INFORMATION S;


SELECT * FROM GEOGRAPHY;
SELECT * FROM STORE_INFORMATION;

-- JOIN 跨資料表關聯查詢
SELECT G.*, S.* 
FROM GEOGRAPHY G, STORE_INFORMATION S
WHERE G.GEOGRAPHY_ID = S.GEOGRAPHY_ID;

-- INNER JOIN ... ON
-- INNER 可省略不寫
SELECT G.*, S.* 
FROM GEOGRAPHY G INNER JOIN STORE_INFORMATION S
ON G.GEOGRAPHY_ID = S.GEOGRAPHY_ID;

SELECT G.*, S.* 
FROM GEOGRAPHY G JOIN STORE_INFORMATION S
ON G.GEOGRAPHY_ID = S.GEOGRAPHY_ID;

-- 交叉連接(cross join)
-- 交叉連接為兩個資料表間的笛卡兒乘積 (Cartesian product)，兩個資料表在結合時
-- 不指定任何條件，即將兩個資料表中所有的可能排列組合出來
SELECT G.*, S.* 
FROM GEOGRAPHY G JOIN STORE_INFORMATION S;


-- LEFT OUTER JOIN ... ON
-- OUTER 可省略不寫
SELECT G.*, S.* 
FROM GEOGRAPHY G LEFT OUTER JOIN STORE_INFORMATION S
ON G.GEOGRAPHY_ID = S.GEOGRAPHY_ID;


-- LEFT JOIN 左側資料表的所有記錄都會加入到查詢結果中，即使右側資料表中的連接欄位沒有符合的值也一樣。
SELECT G.*, S.* 
FROM GEOGRAPHY G LEFT JOIN STORE_INFORMATION S
ON G.GEOGRAPHY_ID = S.GEOGRAPHY_ID;

-- RIGHT JOIN 右側資料表的所有記錄都會加入到查詢結果中，即使左側資料表中的連接欄位沒有符合的值也一樣。
SELECT G.*, S.* 
FROM GEOGRAPHY G RIGHT JOIN STORE_INFORMATION S
ON G.GEOGRAPHY_ID = S.GEOGRAPHY_ID;


-- FULL JOIN 左側資料表及右側資料表的所有記錄都會加入到查詢結果中。
-- FULL JOIN = LEFT JOIN + RIGHT JOIN
SELECT G.*, S.* 
FROM GEOGRAPHY G FULL JOIN STORE_INFORMATION S
ON G.GEOGRAPHY_ID = S.GEOGRAPHY_ID;



-- LEFT JOIN - INNER JOIN
SELECT G.*, S.*
FROM GEOGRAPHY G LEFT JOIN STORE_INFORMATION S
ON G.GEOGRAPHY_ID = S.GEOGRAPHY_ID
WHERE S.GEOGRAPHY_ID IS NULL;


-- RINGHT JOIN - INNSER JOIN
SELECT G.*, S.* 
FROM GEOGRAPHY G RIGHT JOIN STORE_INFORMATION S
ON G.GEOGRAPHY_ID = S.GEOGRAPHY_ID
WHERE G.GEOGRAPHY_ID IS NULL;


-- FULL JOIN - INNER JOIN
SELECT G.*, S.* 
FROM GEOGRAPHY G FULL JOIN STORE_INFORMATION S
ON G.GEOGRAPHY_ID = S.GEOGRAPHY_ID
WHERE G.GEOGRAPHY_ID IS NULL 
OR S.GEOGRAPHY_ID IS NULL;


SELECT STORE_ID, STORE_NAME, CONCAT(STORE_ID, '-', STORE_NAME, '-', SALES)
FROM STORE_INFORMATION;


-- Oracle的CONCAT()只允許兩個參數
-- 在Oracle中，我們可以用'||'來一次串連多個字串
SELECT STORE_ID, STORE_NAME, CONCAT(STORE_ID, STORE_NAME),
  STORE_ID || '-'  || STORE_NAME
FROM STORE_INFORMATION;


-- substring函數是用來抓出一個欄位資料中的其中一部分
SELECT STORE_ID, STORE_NAME, 
	-- 選出所有從第<pos>位置開始的字元
	SUBSTR(STORE_NAME, 5), 
    -- <pos>位置開始，選出接下去的<len>個字元
	SUBSTR(STORE_NAME, 2, 3)
FROM STORE_INFORMATION;


-- TRIM 函數是用來移除掉一個字串中的字頭或字尾。最常見的用途是移除字首或字尾的空白
SELECT STORE_ID, STORE_NAME, 
	LTRIM(STORE_NAME), RTRIM(STORE_NAME), TRIM(STORE_NAME)
FROM STORE_INFORMATION;


-- TRIM([[位置] [要移除的字串] FROM ] 字串):
--  [位置] 的可能值為 LEADING (起頭), TRAILING (結尾), or BOTH (起頭及
-- 結尾)。 這個函數將把 [要移除的字串] 從字串的起頭、結尾，或是起頭及結尾移除。
-- TRIM([[位置] [要移除的字串] FROM ] 字串)
-- [位置] 的可能值為 LEADING (起頭), TRAILING (結尾), or BOTH (起頭及結尾)
SELECT STORE_ID, STORE_NAME,
    TRIM(LEADING 'Bos' FROM STORE_NAME),
    TRIM(TRAILING 's' FROM STORE_NAME),
    TRIM(BOTH 'L' FROM STORE_NAME)
FROM STORE_INFORMATION;


-- SQL 練習題(三)
-- 查詢各區域的營業額總計
-- 資料結果依營業額總計由大到小排序
-- (不論該區域底下是否有所屬商店)
SELECT G.*, S.* 
FROM GEOGRAPHY G LEFT JOIN STORE_INFORMATION S
ON G.GEOGRAPHY_ID = S.GEOGRAPHY_ID;







