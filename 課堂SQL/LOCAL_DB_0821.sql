SELECT STORE_NAME FROM STORE_INFORMATION;

select store_id from STORE_INFORMATION;

SELECT STORE_ID, STORE_NAME FROM STORE_INFORMATION;

SELECT STORE_NAME, SALES,STORE_ID FROM STORE_INFORMATION;

SELECT * FROM STORE_INFORMATION;

-- DISTINCT(資料去重覆)
SELECT DISTINCT STORE_NAME FROM STORE_INFORMATION;

-- 1.以整列資料為去重覆的依據
-- 2.DISTINCT只能一次
-- 3.DISTINCT只能下在欄位最前面
SELECT DISTINCT STORE_ID, STORE_NAME FROM STORE_INFORMATION;
-- SELECT DISTINCT STORE_ID, DISTINCT STORE_NAME FROM STORE_INFORMATION;


SELECT * FROM STORE_INFORMATION WHERE SALES >= 1500;
SELECT * FROM STORE_INFORMATION WHERE SALES <= 1500;
SELECT * FROM STORE_INFORMATION WHERE SALES = 1500;

SELECT * FROM STORE_INFORMATION WHERE STORE_NAME = 'Los Angeles';

SELECT * FROM STORE_INFORMATION 
WHERE SALES = 1500;

-- AND(且)嚴謹,兩條件全部符合
-- OR(或)寬鬆,兩條件符合其一即可
SELECT * FROM STORE_INFORMATION 
WHERE STORE_ID = 1
OR STORE_ID = 2
OR STORE_ID = 3;

SELECT * FROM STORE_INFORMATION
WHERE STORE_ID > 1
AND SALES > 300
OR GEOGRAPHY_ID = 1;


SELECT * FROM STORE_INFORMATION
WHERE STORE_ID IN (1,2,3);

SELECT * FROM STORE_INFORMATION
WHERE STORE_NAME IN ('Boston', 'Los Angeles', 'San Diego');


SELECT * FROM STORE_INFORMATION
WHERE SALES >= 700 AND SALES <= 2500;

-- BETWEEN...AND
SELECT * FROM STORE_INFORMATION
WHERE SALES BETWEEN 700 AND 2500;

SELECT * FROM STORE_INFORMATION
WHERE STORE_DATE BETWEEN '2018-02-01' AND '2018-05-31';

SELECT * FROM STORE_INFORMATION
WHERE STORE_NAME LIKE 'B%';

SELECT * FROM STORE_INFORMATION
WHERE STORE_NAME LIKE '%s';

SELECT * FROM STORE_INFORMATION
WHERE STORE_NAME LIKE 'L%s';

SELECT * FROM STORE_INFORMATION
WHERE STORE_NAME LIKE '%le%';

-- BINARY可指定查尋字母大小寫
SELECT * FROM STORE_INFORMATION
WHERE BINARY STORE_NAME LIKE 'S%';


-- 1.「且」找出屬於西區的商店
-- 2.「且」營業額大於300(包含300)
-- 3.「且」商店名稱“L”開頭
-- 4.「或」營業日介於2018年3月至4月
SELECT * FROM STORE_INFORMATION
WHERE GEOGRAPHY_ID = 2
AND SALES >= 300
AND STORE_NAME LIKE 'L%'
OR STORE_DATE BETWEEN '2018-03-01' AND '2018-04-30';

-- ASC:由小到大(預設)
-- DESC:由大到小
SELECT *
FROM STORE_INFORMATION
ORDER BY SALES ASC;

SELECT *
FROM STORE_INFORMATION
ORDER BY SALES DESC;


SELECT * FROM STORE_INFORMATION 
ORDER BY SALES DESC, STORE_DATE ASC;

-- ORDER BY 可指定的欄位號碼排序(不建議使用)
SELECT STORE_ID, SALES, STORE_NAME
FROM STORE_INFORMATION
ORDER BY 2 ASC;


SELECT SUM(SALES), COUNT(STORE_ID), AVG(SALES),
	MAX(SALES), MIN(SALES)
FROM STORE_INFORMATION;


SELECT STORE_NAME FROM STORE_INFORMATION;


SELECT COUNT(STORE_ID) 
FROM STORE_INFORMATION
WHERE GEOGRAPHY_ID IS NULL;


SELECT COUNT(GEOGRAPHY_ID) 
FROM STORE_INFORMATION
WHERE GEOGRAPHY_ID IS NOT NULL;

-- 查詢商店個數(以商店名稱不重覆計算)
SELECT COUNT(DISTINCT STORE_NAME) FROM STORE_INFORMATION;

-- GROUP BY資料分群、欄位資料合併(聚合函數)
-- 非在GROUP BY的欄位，都必須加上聚合函數
SELECT STORE_NAME, SUM(SALES), COUNT(STORE_ID), AVG(SALES),
	MAX(SALES), MIN(SALES)
FROM STORE_INFORMATION
GROUP BY STORE_NAME;

-- 可以GROUP BY多個欄位
SELECT STORE_ID, STORE_NAME
FROM STORE_INFORMATION
GROUP BY STORE_ID, STORE_NAME;

-- MySQL
-- 資料未合併前的資料清單列表
SELECT STORE_NAME, SUM(SALES), COUNT(STORE_ID),	
	GROUP_CONCAT(SALES ORDER BY SALES DESC SEPARATOR '/')
FROM STORE_INFORMATION
GROUP BY STORE_NAME;

-- Oracle
-- 資料未合併前的資料清單列表
SELECT STORE_NAME, SUM(SALES), COUNT(STORE_ID),
  LISTAGG(SALES, '/') WITHIN GROUP (ORDER BY SALES)
FROM STORE_INFORMATION
GROUP BY STORE_NAME;

--  MS SQL Server
-- 資料未合併前的資料清單列表
SELECT STORE_NAME, 
    STRING_AGG(SALES, '/') WITHIN GROUP ( ORDER BY SALES)
FROM STORE_INFORMATION
GROUP BY STORE_NAME;

-- HAVING:對函數產生的值來設定條件查尋
-- 各別加總營業額大於2500
-- SELECT → FROM → WHERE → GROUP BY → HAVING
SELECT STORE_NAME, SUM(SALES)
FROM STORE_INFORMATION
GROUP BY STORE_NAME
HAVING SUM(SALES) > 0
ORDER BY SUM(SALES) DESC;

-- 計算和統計「個別商店」的以下三項資料：
-- 「總合營業額」、「商店資料個數」、「平均營業額」
-- 搜尋或排除條件如下：
-- 排除「平均營業額」1000(含)以下的商店資料
-- 排除「商店資料個數」1(含)個以下的商店資料
-- 依照「平均營業額」由大至小排序
-- PS:使用別名語法簡化「表格名稱」及查詢結果「欄位名稱」 

SELECT STORE_NAME, SUM(SALES), COUNT(STORE_ID), AVG(SALES)
FROM store_information
GROUP BY STORE_NAME
HAVING AVG(SALES) > 1000
AND COUNT(STORE_ID) > 1
ORDER BY AVG(SALES) DESC;




