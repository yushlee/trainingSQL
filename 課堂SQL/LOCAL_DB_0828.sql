 -- Alias
 -- 欄位別名
 -- 1.AS可省略不寫
 -- 2.別名使用雙引號括起來(雙引號可省略)
 -- 但書:別名不能有空白
 SELECT STORE_NAME, 
	SUM(SALES) 營業額, 
	COUNT(STORE_ID) "COUNT_STORE",
	GROUP_CONCAT(SALES ORDER BY SALES DESC SEPARATOR '/') AS "LIST SALES"
FROM STORE_INFORMATION
GROUP BY STORE_NAME;

-- 表格別名
SELECT S.STORE_NAME AS "商店名稱"
FROM STORE_INFORMATION S;

-- 9筆
SELECT * FROM STORE_INFORMATION;

-- 3筆
SELECT * FROM GEOGRAPHY;

-- 27筆
SELECT S.*, G.* 
FROM STORE_INFORMATION S, GEOGRAPHY G
WHERE S.GEOGRAPHY_ID = G.GEOGRAPHY_ID;

-- 內部連結
-- INNER JOIN...ON
-- INNER(可省略不寫)
SELECT S.*, G.* 
FROM STORE_INFORMATION S  INNER JOIN GEOGRAPHY G
ON S.GEOGRAPHY_ID = G.GEOGRAPHY_ID;

-- 外部連結
-- LEFT OUTER JOIN
-- OUTER(可省略不寫)
SELECT S.*, G.* 
FROM STORE_INFORMATION S LEFT OUTER JOIN GEOGRAPHY G
ON S.GEOGRAPHY_ID = G.GEOGRAPHY_ID;

SELECT S.*, G.* 
FROM STORE_INFORMATION S LEFT JOIN GEOGRAPHY G
ON S.GEOGRAPHY_ID = G.GEOGRAPHY_ID
WHERE G.GEOGRAPHY_ID IS NULL;

SELECT S.*, G.* 
FROM STORE_INFORMATION S RIGHT JOIN GEOGRAPHY G
ON S.GEOGRAPHY_ID = G.GEOGRAPHY_ID;

SELECT S.*, G.* 
FROM STORE_INFORMATION S RIGHT JOIN GEOGRAPHY G
ON S.GEOGRAPHY_ID = G.GEOGRAPHY_ID
WHERE S.GEOGRAPHY_ID IS NULL;


-- MySQL不支援FULL JOIN
SELECT S.*, G.* 
FROM STORE_INFORMATION S FULL JOIN GEOGRAPHY G
ON S.GEOGRAPHY_ID = G.GEOGRAPHY_ID;


SELECT S.*, G.* 
FROM STORE_INFORMATION S FULL JOIN GEOGRAPHY G
ON S.GEOGRAPHY_ID = G.GEOGRAPHY_ID
WHERE S.GEOGRAPHY_ID IS NULL 
OR G.GEOGRAPHY_ID IS NULL;


-- 查詢各區域的營業額總計
-- 資料結果依營業額總計由大到小排序
-- (不論該區域底下是否有所屬商店)
SELECT G.REGION_NAME, IFNULL(SUM(S.SALES), 0) "SUM_SALES"
FROM GEOGRAPHY G LEFT JOIN STORE_INFORMATION S
ON S.GEOGRAPHY_ID = G.GEOGRAPHY_ID
GROUP BY G.REGION_NAME
ORDER BY SUM_SALES DESC;

SELECT * FROM STORE_INFORMATION S;

-- 查詢各區域的商店個數
-- 資料結果依區域的商店個數由大至小排序
-- (依據商店名稱,不包含重覆的商店)
-- (不論該區域底下是否有所屬商店)
SELECT G.REGION_NAME, COUNT(DISTINCT S.STORE_NAME) "COUNT_STORE"
FROM GEOGRAPHY G LEFT JOIN STORE_INFORMATION S
ON S.GEOGRAPHY_ID = G.GEOGRAPHY_ID
GROUP BY G.REGION_NAME
ORDER BY COUNT_STORE DESC;


SELECT CONCAT(STORE_ID, '_', STORE_NAME, '_', SALES) "CONCAT_STORE"
FROM STORE_INFORMATION;


-- Oracle CONCAT只支援兩個參數
-- Oracle字串串間使用 || 符號來串接欄位
SELECT CONCAT(STORE_ID, STORE_NAME) "CONCAT_STORE",
    STORE_ID || '_' || STORE_NAME || '_' || SALES
FROM STORE_INFORMATION;

-- SUBSTR子字串
SELECT STORE_NAME, SUBSTR(STORE_NAME, 3),
	SUBSTR(STORE_NAME, 3, 2)
FROM STORE_INFORMATION;


SELECT STORE_NAME, TRIM(STORE_NAME), RTRIM(STORE_NAME), LTRIM(STORE_NAME)
FROM STORE_INFORMATION;

-- LEADING (起頭), TRAILING (結尾), or BOTH (起頭及結尾)
SELECT STORE_ID, STORE_NAME,
    TRIM(LEADING 'Bos' FROM STORE_NAME),
    TRIM(TRAILING 's' FROM STORE_NAME),
    TRIM(BOTH 'L' FROM STORE_NAME)
FROM STORE_INFORMATION;


SELECT STORE_ID, STORE_NAME, LENGTH(STORE_NAME)
FROM STORE_INFORMATION;

-- CEIL(x)：返回大於或等於x的最大整數值(無條件進位)
-- FLOOR(x)：返回小於或等於x的最小整數值(無條件捨去)
-- 5.ROUND(x ,[y])：返回(四捨五入)
SELECT FLOOR(123.19);
SELECT CEIL(123.1);
SELECT ROUND(123.15, 1);


SELECT STORE_NAME, FLOOR(AVG(SALES))
FROM store_information
GROUP BY STORE_NAME;


SELECT *
FROM store_information
WHERE STORE_DATE = STR_TO_DATE('2018-02-07', '%Y-%m-%d');

SELECT SYSDATE();

-- MySQL轉換函數：
-- 1.DATE_FORMAT(date,format):日期轉字串
SELECT DATE_FORMAT(SYSDATE(), '%m-%d-%Y %T'),
-- 2.STR_TO_DATE(str,format):字串轉日期
STR_TO_DATE('2021-08-15 00:00:00', "%Y-%m-%d %T");

-- Oracle 轉換函數：
-- 1.TO_CHAR(d , format)：日期轉字串
SELECT TO_CHAR(sysdate,'YYYY-mm-DD HH24:MI:SS'),
  -- 2.TO_DATE(string ,format)：字串轉日期
  TO_DATE('2018-05-15 12:30:23','YYYY-mm-DD HH24:MI:SS'),
  -- 3.TO_TIMESTAMP(string,  [format])：字串轉日期
  TO_TIMESTAMP( '2011-12-23 12:30:23.999', 'YYYY-MM-DD HH24:MI:SS.FF3')
FROM DUAL;

-- MS SQL
-- 1.日期轉字串
SELECT convert(varchar, getdate(), 100) 'mon dd yyyy hh:mmAM (or PM)';
SELECT convert(varchar, getdate(), 101) 'mm/dd/yyyy';
SELECT convert(varchar, getdate(), 102) 'yyyy.mm.dd';
SELECT convert(varchar, getdate(), 103) 'dd/mm/yyyy';
SELECT convert(varchar, getdate(), 104) 'dd.mm.yyyy';
SELECT convert(varchar, getdate(), 105) 'dd-mm-yyyy';
SELECT convert(varchar, getdate(), 106) 'dd mon yyyy';
SELECT convert(varchar, getdate(), 107) 'mon dd, yyyy';
SELECT convert(varchar, getdate(), 108) 'hh:mm:ss';
SELECT convert(varchar, getdate(), 109) 'mon dd yyyy hh:mm:ss:mmmAM (or PM)';
SELECT convert(varchar, getdate(), 110) 'mm-dd-yyyy';
SELECT convert(varchar, getdate(), 111) 'yyyy/mm/dd';
SELECT convert(varchar, getdate(), 112) 'yyyymmdd';
SELECT convert(varchar, getdate(), 113) 'dd mon yyyy hh:mm:ss:mmm';
SELECT convert(varchar, getdate(), 114) 'hh:mm:ss:mmm(24h)';
SELECT convert(varchar, getdate(), 120) 'yyyy-mm-dd hh:mm:ss(24h)';
SELECT convert(varchar, getdate(), 121) 'yyyy-mm-dd hh:mm:ss.mmm';
SELECT convert(varchar, getdate(), 126) 'yyyy-mm-ddThh:mm:ss.mmm';

-- 2.字串轉日期
SELECT convert(datetime, '2021-08-16 21:52:22', 120)　'yyyy-mm-dd hh:mm:ss(24h)';


--  MySQL日期算術:
-- MINUTE、HOUR、DAY、WEEK、MONTH、YEAR
SELECT SYSDATE(), 
DATE_SUB(SYSDATE(), INTERVAL 1 YEAR),
DATE_ADD('2021-08-15', INTERVAL 1 DAY),
DATE_ADD('2021-08-15', INTERVAL 1 MINUTE);

-- Oracle INTERVAL 日期計算
SELECT SYSDATE,
SYSDATE - INTERVAL '1' YEAR,
SYSDATE - INTERVAL '1' MONTH,
SYSDATE - INTERVAL '1' DAY,
SYSDATE - INTERVAL '1' HOUR,
SYSDATE - INTERVAL '1' MINUTE,
SYSDATE - INTERVAL '1' SECOND
FROM DUAL;

-- MS SQL
SELECT GETDATE(),
DATEADD(YEAR, -1, GETDATE()) "DATEADD_YEAR",
DATEADD(MONTH, 1, GETDATE()) "DATEADD_MONTH",
DATEADD(DAY, 1, GETDATE()) "DATEADD_DAY",
DATEADD(HOUR, 1, GETDATE()) "DATEADD_HOUR",
DATEADD(MINUTE, 1, GETDATE()) "DATEADD_MINUTE",
DATEADD(SECOND, 1, GETDATE()) "DATEADD_SECOND";


-- MySQL 只取日期部份資訊(ex:只抓年、月、日、時、分、秒)
SELECT SYSDATE(), YEAR(SYSDATE()), MONTH(SYSDATE()), DAY(SYSDATE()),
HOUR(SYSDATE()), MINUTE(SYSDATE()), SECOND(SYSDATE());

SELECT * FROM store_information
WHERE YEAR(STORE_DATE) = '2018'
AND MONTH(STORE_DATE) = '02';

SELECT * 
FROM store_information
WHERE STORE_DATE 
BETWEEN '2018-03-01' 
AND LAST_DAY(STR_TO_DATE('2018-04', "%Y-%m"));

-- MS SQL
SELECT GETDATE(), YEAR(GETDATE()), MONTH(GETDATE()), DAY(GETDATE());

SELECT GETDATE() 'Today',
DATEPART(year,GETDATE()) 'Year Part',
DATEPART(month,GETDATE()) 'Month Part',
DATEPART(day,GETDATE()) 'Day Part',
DATEPART(hour,GETDATE()) 'Hour Part',
DATEPART(minute,GETDATE()) 'Minute Part',
DATEPART(second,GETDATE()) 'Second Part',
DATEPART(millisecond,GETDATE()) 'MilliSecond Part';


-- Oracle
-- TRUNC(D , [FORMAT])：對日期作無條件捨去運算
-- MONTH(月捨去)、YEAR(年捨去)、不帶FORMAT(日捨去)
SELECT 
TRUNC(
    TO_DATE('2018/05/15', 'YYYY/mm/DD'), 'MONTH'
) TRUNC_MONTH,
TRUNC(
    TO_DATE('2018/05/15', 'YYYY/mm/DD'), 'YEAR'
) TRUNC_YEAR,
TRUNC(
    TO_DATE('2018/05/15 17:45:36', 'YYYY-mm-DD HH24:MI:SS'), 'DAY'
) TRUNC_DAY
FROM DUAL;

