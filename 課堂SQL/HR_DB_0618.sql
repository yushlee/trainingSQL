-- HR DB 資料查詢
-- 查詢每個部門高於平均部門薪資的員工
-- (結果依部門平均薪資降冪排序)

-- 1.每個部門的部門平均薪資(部門平均薪資表)
-- 2.每位員工與部門平均薪資表比較(與同部門相比)

SELECT E.EMPLOYEE_ID, E.FIRST_NAME, E.SALARY, E.DEPARTMENT_ID,
	D.DEPARTMENT_NAME,
	T_DEP_INFO.DEP_AVG_SALARY
FROM EMPLOYEES E, DEPARTMENTS D, (
	SELECT E.DEPARTMENT_ID, FLOOR(AVG(E.SALARY)) DEP_AVG_SALARY
	FROM EMPLOYEES E
	GROUP BY E.DEPARTMENT_ID
) T_DEP_INFO
WHERE E.DEPARTMENT_ID = T_DEP_INFO.DEPARTMENT_ID
AND E.DEPARTMENT_ID = D.DEPARTMENT_ID
AND E.SALARY > T_DEP_INFO.DEP_AVG_SALARY
ORDER BY E.DEPARTMENT_ID, E.SALARY DESC;


SELECT E.EMPLOYEE_ID, E.FIRST_NAME, E.SALARY, E.DEPARTMENT_ID,
	D.DEPARTMENT_NAME,
	T_DEP_INFO.DEP_AVG_SALARY
FROM EMPLOYEES E
JOIN DEPARTMENTS D ON E.DEPARTMENT_ID = D.DEPARTMENT_ID
JOIN (
	SELECT E.DEPARTMENT_ID, FLOOR(AVG(E.SALARY)) DEP_AVG_SALARY
	FROM EMPLOYEES E
	GROUP BY E.DEPARTMENT_ID
) T_DEP_INFO ON E.DEPARTMENT_ID = T_DEP_INFO.DEPARTMENT_ID
WHERE  E.SALARY > T_DEP_INFO.DEP_AVG_SALARY
ORDER BY E.DEPARTMENT_ID, E.SALARY DESC;


-- WITH (Common Table Expressions)
-- 且查詢與查詢之間可以相互使用欄位做關聯式查詢
WITH T_DEP_INFO AS (
	SELECT E.DEPARTMENT_ID, FLOOR(AVG(E.SALARY)) DEP_AVG_SALARY
	FROM EMPLOYEES E
	GROUP BY E.DEPARTMENT_ID
),
GREATER_AVG_EMP AS (
	SELECT E.EMPLOYEE_ID, E.FIRST_NAME, E.SALARY, E.DEPARTMENT_ID, T_DEP_INFO.DEP_AVG_SALARY
    FROM EMPLOYEES E, T_DEP_INFO
    WHERE E.DEPARTMENT_ID = T_DEP_INFO.DEPARTMENT_ID
    AND E.SALARY > T_DEP_INFO.DEP_AVG_SALARY
)
SELECT GREATER_AVG_EMP.*, D.DEPARTMENT_NAME
FROM GREATER_AVG_EMP
JOIN DEPARTMENTS D ON GREATER_AVG_EMP.DEPARTMENT_ID = D.DEPARTMENT_ID
ORDER BY DEPARTMENT_ID, SALARY DESC;


-- 查詢每個部門薪資排名前三名的員工
WITH DEP_RANK AS (
SELECT EMPLOYEE_ID, FIRST_NAME, SALARY, DEPARTMENT_ID,
	RANK()OVER(PARTITION BY DEPARTMENT_ID ORDER BY SALARY DESC) "DEP_SALARY_RANK"
FROM EMPLOYEES
),
TOP_EMP AS (
	SELECT * FROM DEP_RANK
	WHERE DEP_SALARY_RANK <= 3
)
SELECT TOP_EMP.*, D.DEPARTMENT_NAME
FROM TOP_EMP LEFT JOIN departments D
ON TOP_EMP.DEPARTMENT_ID = D.DEPARTMENT_ID;

-- Aggregate Functions with OVER Clause (聚合函數)
SELECT STORE_ID, STORE_NAME, SALES, GEOGRAPHY_ID,
    -- 依「區域劃分」取營業額"最小值"
    MIN(SALES) OVER (PARTITION BY GEOGRAPHY_ID) MIN_SALES,
    -- 依「區域劃分」取營業額"最大值"
    MAX(SALES) OVER (PARTITION BY GEOGRAPHY_ID) MAX_SALES,
    -- 依「區域劃分」取商店"數量"
    COUNT(STORE_ID) OVER (PARTITION BY GEOGRAPHY_ID) COUNT_STORE_ID,
    -- 依「區域劃分」取營業額"總和"
    SUM(SALES) OVER (PARTITION BY GEOGRAPHY_ID) SUM_SALES,
    -- 依「區域劃分」取營業額"平均"
    AVG(SALES) OVER (PARTITION BY GEOGRAPHY_ID) AVG_SALES
FROM STORE_INFORMATION
ORDER BY GEOGRAPHY_ID, SALES;


-- Analytic Functions with OVER Clause (分析函數)
SELECT STORE_ID, STORE_NAME,
    ROW_NUMBER( ) OVER (ORDER BY SALES) ROWNO_STORE,
    SALES,
    -- 依「營業額」排序取"上一個"營業額
    LAG(SALES) OVER (ORDER BY SALES) PREV_SALES,
    -- 依「營業額」排序取"下一個"營業額
    LEAD(SALES) OVER (ORDER BY SALES) NEXT_SALES
FROM STORE_INFORMATION
ORDER BY SALES;


