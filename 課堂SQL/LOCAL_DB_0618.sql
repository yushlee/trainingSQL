-- SQL UNION 聯集(不包含重覆值)
-- 1.結合兩個查詢SQL語言的查詢結果
-- 2.兩個查詢SQL的欄位查詢個數必須一致
-- 3.兩個查詢SQL的欄位型態必須一致(MySQL無此限制)

-- null,1,2
SELECT GEOGRAPHY_ID FROM STORE_INFORMATION
UNION
-- 1,2,3
SELECT GEOGRAPHY_ID FROM GEOGRAPHY;

-- MySQL透過UNION達到FULL JOIN的結果
-- FULL JOIN = LEFT JOIN + RINGHT JOIN
SELECT G.*, S.* 
FROM GEOGRAPHY G 
LEFT JOIN STORE_INFORMATION S ON G.GEOGRAPHY_ID = S.GEOGRAPHY_ID
UNION
SELECT G.*, S.* 
FROM GEOGRAPHY G 
RIGHT JOIN STORE_INFORMATION S ON G.GEOGRAPHY_ID = S.GEOGRAPHY_ID;

  
--   SQL UNION ALL 聯集(包含重覆值)
-- 9筆
SELECT GEOGRAPHY_ID FROM STORE_INFORMATION
UNION ALL
-- 3筆
SELECT GEOGRAPHY_ID FROM GEOGRAPHY;


--   SQL INTERSECT 交集(MySQL不支援)
/*
-- null,1,2
SELECT GEOGRAPHY_ID FROM STORE_INFORMATION
INTERSECT
-- 1,2,3
SELECT GEOGRAPHY_ID FROM GEOGRAPHY;
*/

-- MySQL達成INTERSECT語法替代方案
-- INNER JOIN + DISTINCT = INTERSECT
SELECT DISTINCT G.GEOGRAPHY_ID
FROM GEOGRAPHY G
JOIN STORE_INFORMATION S ON  G.GEOGRAPHY_ID = S.GEOGRAPHY_ID;

--   SQL MINUS 排除(不包含重覆值) 
-- MINUS (Oracle)、EXCEPT (MS SQL)指令是運用在兩個 SQL 語句上
-- 它先找出第一個 SQL 語句所產生的結果，
-- 然後看這些結果「有沒有在第二個 SQL 語句的結果中」。
-- 如果「有」的話，那這一筆資料就被「去除」，而不會在最後的結果中出現。
-- 如果「沒有」的話，那這一筆資料就被「保留」，而就會在最後的結果中出現。
/*
-- MINUS(Oracle)
-- 查詢結果:3
-- 1,2,3
SELECT GEOGRAPHY_ID FROM GEOGRAPHY
MINUS
-- null,1,2
SELECT GEOGRAPHY_ID FROM STORE_INFORMATION;

-- EXCEPT(MS SQL)
-- 查詢結果:3
-- 1,2,3
SELECT GEOGRAPHY_ID FROM GEOGRAPHY
EXCEPT
-- null,1,2
SELECT GEOGRAPHY_ID FROM STORE_INFORMATION;
*/

-- MySQL MINUS替代方案
-- LEFT JOIN + table2.id IS NULL = MINUS
SELECT G.GEOGRAPHY_ID
FROM GEOGRAPHY G
LEFT JOIN STORE_INFORMATION S ON G.GEOGRAPHY_ID = S.GEOGRAPHY_ID
WHERE S.GEOGRAPHY_ID IS NULL;


--   SQL SubQuery 子查詢

-- 『簡單子查詢』 (Simple Subquery)
-- 外查詢
SELECT S.* 
FROM STORE_INFORMATION S
-- [比較運算素] 可以是相等的運算素，例如 =, >, <, >=, <=
WHERE S.SALES = (
	-- 內查詢
	SELECT MAX(S.SALES)
	FROM STORE_INFORMATION S
);

-- 外查詢
SELECT G.*
FROM GEOGRAPHY G
WHERE G.GEOGRAPHY_ID IN (
	-- 內查詢
	SELECT S.GEOGRAPHY_ID
	FROM STORE_INFORMATION S
	WHERE S.SALES < 2000
);

-- 『相關子查詢』(Correlated Subquery)
-- 外查詢
SELECT SUM(S.SALES)
FROM STORE_INFORMATION S
WHERE S.GEOGRAPHY_ID IN (
	-- 內查詢
	SELECT G.GEOGRAPHY_ID
	FROM GEOGRAPHY G
    WHERE G.GEOGRAPHY_ID = S.GEOGRAPHY_ID
);

--   SQL EXISTS 存在式關聯查詢
--   SQL CASE WHEN 條件查詢

